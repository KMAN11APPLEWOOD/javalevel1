import java.awt.*;

public class TetrisBlock {
    private int[][] shape;
    private Color colour;
    private int x, y;

    private int[][][] shapes;
    private int currentRotation;

    public TetrisBlock(int[][] shape, Color colour) {
        this.shape = shape;
        this.colour = colour;

        initShapes();
    }

    private void initShapes() {
        shapes = new int[4][][];

        for(int i = 0; i < 4; i++) {
            int row = shape[0].length;
            int col = shape.length;
            shapes[i] = new int[row][col];

            for(int y = 0; y < row; y++) {
                for(int x = 0; x < col; x++) {
                    shapes[i][y][x] = shape[col - x - 1][y];
                }
            }
            shape = shapes[i];
        }
    }

    public void spawn(int gridWidth) {
        this.currentRotation = 0;
        this.shape = shapes[currentRotation];
        this.y = -getHeight();
        this.x = (int)(Math.random() * (gridWidth - getWidth() + 1));
    }

    public int[][] getShape() {return shape;}
    public Color getColour() {return colour;}
    public int getX() {return x;}
    public int getY() {return y;}
    public int getHeight() {return shape.length;}
    public int getWidth() {return shape[0].length;}

    public void setX(int x) {this.x = x;}
    public void setY(int y) {this.y = y;}

    public void moveDown() {y++;}
    public void moveLeft() {x--;}
    public void moveRight() {x++;}

    public void rotate() {
        currentRotation++;
        if(currentRotation > 3) {currentRotation = 0;}
        shape = shapes[currentRotation];
    }

    public int getBottomEdge() {return y + getHeight();}
    public int getLeftEdge() {return x;}
    public int getRightEdge() {return x + getWidth();}
}
